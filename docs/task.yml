/api/v1/project/{projectId}/task:
  post:
    summary: Create a new task
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project to which the task will be added.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: The title of the task.
              description:
                type: string
                description: The description of the task.
              dueDate:
                type: string
                format: date-time
                description: The due date of the task.
              priority:
                type: string
                enum: [high, medium, low]
                description: The priority of the task.
              status:
                type: string
                enum: [inprogress, todo, completed, review]
                description: The status of the task.
              assignTo:
                type: string
                description: The ID of the user to whom the task is assigned.
    responses:
      "201":
        description: Task created successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Invalid data provided.
      "401":
        description: Unauthorized. User not authenticated.
      "404":
        description: Project not found.
      "500":
        description: Internal server error.

  get:
    summary: Get tasks for a project
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project to get tasks from.
        schema:
          type: string
      - in: query
        name: duedate
        schema:
          type: string
          format: date-time
        description: Filter tasks by due date.
      - in: query
        name: status
        schema:
          type: string
        description: Filter tasks by status.
      - in: query
        name: priority
        schema:
          type: string
        description: Filter tasks by priority.
    responses:
      "200":
        description: Tasks retrieved successfully.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Invalid data provided.
      "500":
        description: Internal server error.

/api/v1/project/{projectId}/task/{taskId}:
  get:
    summary: Get a single task
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project containing the task.
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        description: ID of the task to retrieve.
        schema:
          type: string
    responses:
      "200":
        description: Task retrieved successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Task not found.
      "500":
        description: Internal server error.

  put:
    summary: Update a task
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project containing the task.
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        description: ID of the task to update.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Task"
    responses:
      "200":
        description: Task updated successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Task not found.
      "401":
        description: Unauthorized. User not authorized.
      "500":
        description: Internal server error.

  delete:
    summary: Delete a task
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project containing the task.
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        description: ID of the task to delete.
        schema:
          type: string
    responses:
      "200":
        description: Task deleted successfully.
      "400":
        description: Bad request. Task not found.
      "401":
        description: Unauthorized. User not authorized.
      "500":
        description: Internal server error.

/api/v1/project/{projectId}/task/{taskId}/assign:
  post:
    summary: Assign a task to a user
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project containing the task.
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        description: ID of the task to assign.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              assignTo:
                type: string
                description: ID of the user to whom the task will be assigned.
    responses:
      "200":
        description: Task assigned successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Task or user not found.
      "401":
        description: Unauthorized. User not authorized.
      "500":
        description: Internal server error.

/api/v1/project/{projectId}/task/{taskId}/comment:
  post:
    summary: Add a comment to a task
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project containing the task.
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        description: ID of the task to add a comment.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: The comment message.
    responses:
      "200":
        description: Comment added successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      "400":
        description: Bad request. Task not found.
      "500":
        description: Internal server error.

/api/v1/project/{projectId}/task/{taskId}/status:
  put:
    summary: Change task status
    tags:
      - Tasks
    parameters:
      - in: path
        name: projectId
        required: true
        description: ID of the project containing the task.
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        description: ID of the task to change status.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                enum: [inprogress, todo, completed, review]
                description: The new status of the task.
    responses:
      "200":
        description: Task status changed successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Task not found.
      "401":
        description: Unauthorized. User not authorized.
      "500":
        description: Internal server error.

/api/v1/project/dashboard:
  get:
    summary: Get dashboard data
    tags:
      - Tasks
    responses:
      "200":
        description: Dashboard data retrieved successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                totalTask:
                  type: integer
                  description: The total number of tasks.
                tasks:
                  type: array
                  items:
                    $ref: "#/components/schemas/Task"
      "400":
        description: Bad request. Data not found.
      "500":
        description: Internal server error.
